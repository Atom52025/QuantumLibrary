name: CD with EC2

on:
  workflow_dispatch:
  workflow_run:
    workflows:
      - Tests
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Install Docker
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install dependencies
        run: npm install

      - name: Deploy to EC2
        run: |
          git fetch origin main
          git pull origin main
          echo "${{ secrets.DOCKER_COMPOSE_BUILD_FILE }}" > docker-compose.yml
          docker-compose build
          docker push atom52025/quantum-library-backend:latest
          docker push atom52025/quantum-library-frontend:latest
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'          
            echo "${{ secrets.DOCKER_COMPOSE_START_FILE }}" > docker-compose.yml
          
            docker-compose down
          
            docker pull atom52025/quantum-library-frontend:latest
            docker pull atom52025/quantum-library-backend:latest
          
            docker image prune -f
            docker-compose up -d
          EOF
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
